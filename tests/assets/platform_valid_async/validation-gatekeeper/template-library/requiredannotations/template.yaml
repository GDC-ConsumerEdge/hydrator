###############################################################################
# Copyright 2024 Google, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
###############################################################################
apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: k8srequiredannotations
  namespace: gator-local
  annotations:
    metadata.gatekeeper.sh/title: "Required Annotations"
    metadata.gatekeeper.sh/version: 1.0.1
    description: >-
      Requires resources to contain specified annotations, with values matching provided regular expressions.
spec:
  crd:
    spec:
      names:
        kind: K8sRequiredAnnotations
      validation:
        openAPIV3Schema:
          type: object
          properties:
            message:
              type: string
            annotations:
              type: array
              description: >-
                A list of annotations and values the object must specify.
              items:
                type: object
                properties:
                  key:
                    type: string
                    description: >-
                      The required annotation.
                  allowedRegex:
                    type: string
                    description: >-
                      If specified, a regular expression the annotation's value must match. The value must contain at least one match for the regular expression.
  targets:
  - target: admission.k8s.gatekeeper.sh
    rego: |
      package k8srequiredannotations

      violation[{"msg": msg, "details": {"missing_annotations": missing}}] {
          provided := {annotation | input.review.object.metadata.annotations[annotation]}
          required := {annotation | annotation := input.parameters.annotations[_].key}
          missing := required - provided
          count(missing) > 0
          msg := sprintf("you must provide annotation(s): %v", [missing])
      }

      violation[{"msg": msg}] {
        value := input.review.object.metadata.annotations[key]
        expected := input.parameters.annotations[_]
        expected.key == key
        expected.allowedRegex != ""
        not regex.match(expected.allowedRegex, value)
        msg := sprintf("Annotation <%v: %v> does not satisfy allowed regex: %v", [key, value, expected.allowedRegex])
      }
